# Generated by Django 5.0.1 on 2025-09-12 02:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="payment_methods/",
                        verbose_name="Logo",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "min_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=5.0,
                        max_digits=10,
                        verbose_name="Montant minimum",
                    ),
                ),
                (
                    "max_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=1000.0,
                        max_digits=10,
                        verbose_name="Montant maximum",
                    ),
                ),
                (
                    "fee_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        verbose_name="Frais (%)",
                    ),
                ),
                (
                    "processing_time",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Temps de traitement"
                    ),
                ),
            ],
            options={
                "verbose_name": "Méthode de paiement",
                "verbose_name_plural": "Méthodes de paiement",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VipEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=200)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("tournoi", "Tournoi"),
                            ("promotion", "Promotion"),
                            ("bonus", "Bonus"),
                            ("sport_event", "Événement sportif"),
                        ],
                        max_length=20,
                    ),
                ),
                ("date", models.DateTimeField()),
                ("description", models.TextField(blank=True)),
                (
                    "access_type",
                    models.CharField(
                        choices=[
                            ("vip_only", "VIP uniquement"),
                            ("public", "Public"),
                            ("invite_only", "Sur invitation"),
                        ],
                        default="public",
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        null=True,
                        verbose_name="Identifiant unique",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Solde bonus",
                    ),
                ),
                (
                    "kapanga_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Solde Ktap",
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        default="profile_pics/default.jpg",
                        upload_to="profile_pics/",
                        verbose_name="Photo de profil",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="fr", max_length=10, verbose_name="Langue"
                    ),
                ),
                (
                    "email_verified",
                    models.BooleanField(default=False, verbose_name="Email vérifié"),
                ),
                (
                    "verification_token",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "bonus_conditions_met",
                    models.BooleanField(
                        default=False, verbose_name="Conditions de bonus remplies"
                    ),
                ),
                (
                    "bonus_wagered_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Montant misé pour le bonus",
                    ),
                ),
                (
                    "is_vip",
                    models.BooleanField(default=False, verbose_name="Statut VIP"),
                ),
                (
                    "vip_since",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'activation VIP"
                    ),
                ),
                (
                    "vip_points",
                    models.IntegerField(default=0, verbose_name="Points VIP"),
                ),
                (
                    "total_bonus",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Total des bonus VIP",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="users_groups",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "parrain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="filleuls",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Parrain",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="users_permissions",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="FidelityPoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.PositiveIntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("achat", "Achat"),
                            ("pari", "Pari"),
                            ("vente", "Vente"),
                            ("promotion", "Promotion"),
                        ],
                        max_length=15,
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fidelity_points",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GameOrganizationRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_name",
                    models.CharField(max_length=200, verbose_name="Nom du jeu proposé"),
                ),
                ("description", models.TextField(verbose_name="Détails de la demande")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("approved", "Approuvée"),
                            ("rejected", "Rejetée"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de mise à jour"
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notes administrateur"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_organization_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Demande d'organisation de jeu",
                "verbose_name_plural": "Demandes d'organisation de jeu",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="KtapToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("gain", "Gain"),
                            ("achat", "Achat"),
                            ("vente", "Vente"),
                            ("bonus", "Bonus"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("disponible", "Disponible"),
                            ("en_vente", "En vente"),
                            ("vendu", "Vendu"),
                        ],
                        default="disponible",
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ktap_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DepositRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Montant"
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="ID de transaction",
                    ),
                ),
                (
                    "proof_of_payment",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="payment_proofs/",
                        verbose_name="Preuve de paiement",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de mise à jour"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("approved", "Approuvé"),
                            ("rejected", "Rejeté"),
                        ],
                        default="pending",
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(blank=True, verbose_name="Notes administrateur"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deposit_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deposit_requests",
                        to="users.paymentmethod",
                    ),
                ),
            ],
            options={
                "verbose_name": "Demande de dépôt",
                "verbose_name_plural": "Demandes de dépôt",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PromoCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Code promo"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "usage_count",
                    models.IntegerField(
                        default=0, verbose_name="Nombre d'utilisations"
                    ),
                ),
                (
                    "max_uses",
                    models.IntegerField(
                        default=100, verbose_name="Nombre maximum d'utilisations"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promo_codes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Propriétaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "Code promo",
                "verbose_name_plural": "Codes promo",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Dépôt"),
                            ("withdrawal", "Retrait"),
                            ("win", "Gain"),
                            ("loss", "Perte"),
                            ("bonus", "Bonus"),
                            ("kapanga_purchase", "Achat de Ktap"),
                            ("kapanga_usage", "Utilisation de Ktap"),
                        ],
                        max_length=30,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("description", models.CharField(blank=True, max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("completed", "Complété"),
                            ("failed", "Échoué"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="ID de transaction",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="users.paymentmethod",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="PromoCodeUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'utilisation"
                    ),
                ),
                (
                    "bonus_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Montant du bonus"
                    ),
                ),
                (
                    "promo_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usages",
                        to="users.promocode",
                        verbose_name="Code promo",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promo_code_usages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
                (
                    "deposit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promo_code_usage",
                        to="users.transaction",
                        verbose_name="Dépôt",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisation de code promo",
                "verbose_name_plural": "Utilisations de codes promo",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("activity_type", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("details", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Activité utilisateur",
                "verbose_name_plural": "Activités utilisateurs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="VipBonus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bonus_type",
                    models.CharField(
                        choices=[
                            ("journalier", "Journalier"),
                            ("hebdomadaire", "Hebdomadaire"),
                            ("evenementiel", "Événementiel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("montant", models.DecimalField(decimal_places=2, max_digits=10)),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vip_bonuses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VIPRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("en_attente", "En attente"),
                            ("acceptee", "Acceptée"),
                            ("rejetee", "Rejetée"),
                        ],
                        default="en_attente",
                        max_length=10,
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("commentaire_admin", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vip_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Demande VIP",
                "verbose_name_plural": "Demandes VIP",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="VipSale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveIntegerField()),
                (
                    "price_per_token",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("en_attente", "En attente"),
                            ("vendu", "Vendu"),
                            ("annule", "Annulé"),
                        ],
                        default="en_attente",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vip_sales",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WithdrawalRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Montant"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("approved", "Approuvée"),
                            ("rejected", "Rejetée"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de mise à jour"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[("crypto", "Crypto Money"), ("paypal", "PayPal")],
                        max_length=20,
                        null=True,
                        verbose_name="Méthode de paiement",
                    ),
                ),
                (
                    "reference_paiement",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Référence de paiement",
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nom de la banque",
                    ),
                ),
                (
                    "iban",
                    models.CharField(
                        blank=True, max_length=34, null=True, verbose_name="IBAN"
                    ),
                ),
                (
                    "bic",
                    models.CharField(
                        blank=True, max_length=11, null=True, verbose_name="BIC/SWIFT"
                    ),
                ),
                (
                    "paypal_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Email PayPal",
                    ),
                ),
                (
                    "crypto_address",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Adresse du portefeuille crypto",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(blank=True, verbose_name="Notes administrateur"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="withdrawal_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Demande de retrait",
                "verbose_name_plural": "Demandes de retrait",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["user", "transaction_type"],
                name="users_trans_user_id_57723f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["status", "timestamp"], name="users_trans_status_8c8e2b_idx"
            ),
        ),
    ]
