# Generated by Django 5.0.1 on 2025-09-12 02:24

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Bet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("1.00"))
                        ],
                        verbose_name="Montant",
                    ),
                ),
                (
                    "choice",
                    models.CharField(
                        choices=[
                            ("team1", "Équipe 1"),
                            ("team2", "Équipe 2"),
                            ("draw", "Match nul"),
                            ("other", "Autre"),
                        ],
                        default="team1",
                        max_length=50,
                        verbose_name="Choix",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("won", "Gagné"),
                            ("lost", "Perdu"),
                            ("cancelled", "Annulé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de mise à jour"
                    ),
                ),
                (
                    "use_ktap",
                    models.BooleanField(
                        default=False, verbose_name="Parier avec mes KTAP (VIP)"
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bets",
                        to="core.match",
                        verbose_name="Match",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pari",
                "verbose_name_plural": "Paris",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LiveBet",
            fields=[
                (
                    "bet_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="betting.bet",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Horodatage"),
                ),
                (
                    "match_time",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Temps de jeu",
                    ),
                ),
                (
                    "current_score",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Score actuel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pari en direct",
                "verbose_name_plural": "Paris en direct",
            },
            bases=("betting.bet",),
        ),
        migrations.CreateModel(
            name="BetType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                ("description", models.TextField(verbose_name="Description")),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "odds",
                    models.DecimalField(
                        decimal_places=2, default=2.0, max_digits=5, verbose_name="Cote"
                    ),
                ),
                (
                    "game_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bet_types",
                        to="core.game",
                        verbose_name="Jeu",
                    ),
                ),
            ],
            options={
                "verbose_name": "Type de pari",
                "verbose_name_plural": "Types de paris",
            },
        ),
        migrations.AddField(
            model_name="bet",
            name="bet_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bets",
                to="betting.bettype",
                verbose_name="Type de pari",
            ),
        ),
        migrations.CreateModel(
            name="P2PChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Titre du défi"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("fifa", "FIFA"),
                            ("pes", "PES"),
                            ("csgo", "CS:GO"),
                            ("lol", "League of Legends"),
                            ("valorant", "Valorant"),
                            ("rocket_league", "Rocket League"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Type de jeu",
                    ),
                ),
                (
                    "game_name",
                    models.CharField(
                        default="", max_length=100, verbose_name="Nom du jeu"
                    ),
                ),
                (
                    "custom_game",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Jeu personnalisé"
                    ),
                ),
                (
                    "creator_bet_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("1.00"))
                        ],
                        verbose_name="Mise du créateur",
                    ),
                ),
                (
                    "opponent_bet_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("1.00"))
                        ],
                        verbose_name="Mise de l'adversaire",
                    ),
                ),
                ("rules", models.TextField(blank=True, verbose_name="Règles du défi")),
                (
                    "match_format",
                    models.CharField(
                        default="1v1", max_length=100, verbose_name="Format du match"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Ouvert"),
                            ("accepted", "Accepté"),
                            ("in_progress", "En cours"),
                            ("completed", "Terminé"),
                            ("cancelled", "Annulé"),
                            ("expired", "Expiré"),
                        ],
                        default="open",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Date d'expiration")),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'acceptation"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de fin"
                    ),
                ),
                (
                    "creator_result",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("win", "Victoire"),
                            ("loss", "Défaite"),
                            ("draw", "Match nul"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Résultat du créateur",
                    ),
                ),
                (
                    "opponent_result",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("win", "Victoire"),
                            ("loss", "Défaite"),
                            ("draw", "Match nul"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Résultat de l'adversaire",
                    ),
                ),
                (
                    "creator_proof",
                    models.TextField(blank=True, verbose_name="Preuve du créateur"),
                ),
                (
                    "opponent_proof",
                    models.TextField(blank=True, verbose_name="Preuve de l'adversaire"),
                ),
                (
                    "admin_decision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("creator_win", "Victoire créateur"),
                            ("opponent_win", "Victoire adversaire"),
                            ("draw", "Match nul"),
                            ("cancelled", "Annulé"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Décision admin",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_challenges",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créateur",
                    ),
                ),
                (
                    "opponent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_challenges",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Adversaire",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="won_challenges",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Gagnant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Défi P2P",
                "verbose_name_plural": "Défis P2P",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="P2PMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Contenu")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'envoi"
                    ),
                ),
                (
                    "is_system_message",
                    models.BooleanField(default=False, verbose_name="Message système"),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="betting.p2pchallenge",
                        verbose_name="Défi",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="p2p_messages_sent",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Expéditeur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message P2P",
                "verbose_name_plural": "Messages P2P",
                "ordering": ["created_at"],
            },
        ),
    ]
