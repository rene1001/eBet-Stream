# Generated by Django 5.2 on 2025-07-14 00:08

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("betting", "0008_bet_use_ktap"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="P2PChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("fifa", "FIFA"),
                            ("pes", "PES"),
                            ("fortnite", "Fortnite"),
                            ("call_of_duty", "Call of Duty"),
                            ("csgo", "CS:GO"),
                            ("lol", "League of Legends"),
                            ("valorant", "Valorant"),
                            ("rocket_league", "Rocket League"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Type de jeu",
                    ),
                ),
                (
                    "game_name",
                    models.CharField(max_length=100, verbose_name="Nom du jeu"),
                ),
                (
                    "bet_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("1.00"))
                        ],
                        verbose_name="Montant du pari",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description du défi"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Ouvert"),
                            ("accepted", "Accepté"),
                            ("in_progress", "En cours"),
                            ("completed", "Terminé"),
                            ("cancelled", "Annulé"),
                            ("expired", "Expiré"),
                        ],
                        default="open",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'acceptation"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de fin"
                    ),
                ),
                (
                    "challenger_score",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Score du défieur"
                    ),
                ),
                (
                    "opponent_score",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Score de l'adversaire"
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Date d'expiration")),
                (
                    "challenger",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenges_sent",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Défieur",
                    ),
                ),
                (
                    "opponent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenges_received",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Adversaire",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="p2p_wins",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Gagnant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Défi P2P",
                "verbose_name_plural": "Défis P2P",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="P2PMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Contenu")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'envoi"
                    ),
                ),
                (
                    "is_system_message",
                    models.BooleanField(default=False, verbose_name="Message système"),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="betting.p2pchallenge",
                        verbose_name="Défi",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="p2p_messages_sent",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Expéditeur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message P2P",
                "verbose_name_plural": "Messages P2P",
                "ordering": ["created_at"],
            },
        ),
    ]
